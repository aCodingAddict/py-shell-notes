python 是动态语言,面向对象OOP(Object Oriented Programming).
在Python中，一个.py文件就称之为一个模块（Module）,包括Python内置的模块和来自第三方的模块.
为了避免模块名冲突，Python又引入了按目录来组织模块的方法，称为包（Package）.
每一个包目录下面都会有一个__init__.py的文件，这个文件是必须存在的，否则，Python就把这个目录当成普通目录，而不是一个包.
__init__.py可以是空文件，也可以有Python代码，因为__init__.py本身就是一个模块,而它的模块名就是包名.
正常的函数和变量名是公开的（public），可以被直接引用.
类似__xxx__这样的变量是特殊变量，可以被直接引用，但是有特殊用途.
类似_xxx和__xxx这样的函数或变量就是非公开的（private），不应该被直接引用，private函数和变量“不应该”被直接引用，而不是“不能”被直接引用.
因为Python并没有一种方法可以完全限制访问private函数或变量，但是，从编程习惯上不应该引用private函数或变量。
__双下划线的,之所以不能通过__属性名访问,是因为python解释器把他变为了_类名__属性名.不同版本的Python解释器可能会把__变量改成不同的变量名。
变量名类似__xxx__的，也就是以双下划线开头，并且以双下划线结尾的，是特殊变量，特殊变量是可以直接访问的，不是private变量

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# @Author : XueKai_aCodingAddict
# @Time : ${DATE} ${TIME}

__author__ = 'XueKai_aCodingAddict'

"""
DOCUMENT
"""

from ?1 import ?2

占位符	替换内容
 %d	     整数
 %f	     浮点数
 %s	     字符串
 %x	  十六进制整数

PI = 3.1415926 大写表示常量
None 表示空值

if ? :
elif ? :
else :